datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-1.1.x", "debian-openssl-1.1.x"]
}

model User {
  id          Int          @id @default(autoincrement()) @map("id")
  googleId    String       @unique @map("google_id")
  email       String       @unique @map("email")
  name        String       @map("name")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  deletedAt   DateTime?    @map("deleted_at")
  vocabularies Vocabulary[]

  @@map("users")
}

model PartOfSpeech {
  id          Int      @id @default(autoincrement()) @map("id")
  name        String   @unique @map("name")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  deletedAt   DateTime?    @map("deleted_at")
  vocabularies Vocabulary[]

  @@map("parts_of_speech")
}

model Vocabulary {
  id          Int      @id @default(autoincrement()) @map("id")
  userId      Int      @map("user_id")
  word        String   @map("word")
  meaning     String   @map("meaning")
  partOfSpeechId Int? @map("part_of_speech_id") // 品詞（選択）
  pronunciation String? @map("pronunciation") // 発音記号
  exampleSentence String? @map("example_sentence") // 例文
  synonyms    String?  @map("synonyms") // 類義語
  antonyms    String?  @map("antonyms") // 対義語
  url         String?  @map("url") // URL
  memorized   Boolean? @map("memorized") // 覚えたかチェック
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  partOfSpeech PartOfSpeech? @relation(fields: [partOfSpeechId], references: [id])

  @@map("vocabularies")
}

// model Test {
//   id          Int      @id @default(autoincrement()) @map("id")
//   userId      Int      @map("user_id")
//   score       Int      @map("score")
//   createdAt   DateTime @default(now()) @map("created_at")
//   updatedAt   DateTime @updatedAt @map("updated_at")
//   user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   vocabulary  Vocabulary @relation(fields: [vocabId], references: [id], onDelete: Cascade)

//   @@map("tests")
// }